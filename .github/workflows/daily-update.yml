name: Daily Profile Update

on:
  schedule:
    - cron: "0 */6 * * *" # Executa a cada 6 horas
  workflow_dispatch:

jobs:
  update-presence:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm install @octokit/rest
          
      - name: Generate presence status
        run: node scripts/presence-tracker.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          
      - name: Update README with presence status
        run: |
          if [ -f assets/presence-status.json ]; then
            node -e '
              const fs = require("fs");
              const path = require("path");
              
              // Ler arquivos
              const statusFile = path.join(__dirname, "assets/presence-status.json");
              const readmeFile = path.join(__dirname, "README.md");
              
              const status = JSON.parse(fs.readFileSync(statusFile, "utf8"));
              let readme = fs.readFileSync(readmeFile, "utf8");
              
              // Gerar HTML dos badges
              const badgesHtml = status.badges.map(badge => {
                const url = `https://img.shields.io/badge/${encodeURIComponent(badge.text)}-${badge.color}?style=for-the-badge&logo=${badge.logo}&logoColor=${badge.logoColor}`;
                return `    <img src="${url}" alt="${badge.text}" />`;
              }).join("\n");
              
              // Substituir no README
              const statusSection = `<div id="status-live">
  <h2>ðŸŸ¢ Status Live</h2>
  <p align="center">
${badgesHtml}
    <br>
    <sub><i>Ãšltima atualizaÃ§Ã£o: ${new Date(status.lastUpdated).toLocaleString("pt-BR")}</i></sub>
  </p>
</div>`;
              
              // Substituir seÃ§Ã£o de status
              const newReadme = readme.replace(
                /<div id="status-live">[\s\S]*?<\/div>/,
                statusSection
              );
              
              fs.writeFileSync(readmeFile, newReadme);
              console.log("README atualizado com sucesso!");
            '
          else
            echo "Arquivo de status nÃ£o encontrado!"
          fi
          
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md assets/presence-status.json
          git diff --staged --quiet || git commit -m "ðŸ“Š Atualiza status de presenÃ§a"
          git push
